# ---------------------------------------------------------------
# Global
# ---------------------------------------------------------------

# default image
image: node:12

# stages (main steps of pipeline)
stages:
  - build
  - alt_build
  - deploy

# ---------------------------------------------------------------
# Global variables
# ---------------------------------------------------------------

variables:
    CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:build
    CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# ---------------------------------------------------------------
# Jobs templates
# ---------------------------------------------------------------

.build:
  stage: build
  tags: [ redshift ]
  script:
    - yarn run build:web
  after_script:
    - ls -la dist/web/
    - du -csh dist/web/
  artifacts:
    untracked: true
    paths:
      - dist/web
    expire_in: 60 minutes

.docker:
  image: docker:latest
  tags: [redshift]
  services:
    - docker:dind
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY} || true
  after_script:
    - docker logout ${CI_REGISTRY}
  allow_failure: false

# ---------------------------------------------------------------
# Build jobs
# ---------------------------------------------------------------

fast-build:
  extends: .build
  image: ${CONTAINER_BUILD_IMAGE}
  before_script:
    - mv /.build-cache/node_modules ./
  only:
    - develop

failsafe-build:
  extends: .build
  stage: alt_build
  when: on_failure
  before_script:
    - yarn
  only:
    - develop

docker-for-fast-build:
  extends: .docker
  stage: alt_build
  when: on_failure
  allow_failure: true
  before_script:
    - echo 'FROM node:12' > Dockerfile
    - echo 'WORKDIR /.build-cache' >> Dockerfile
    - echo 'COPY ./ ./' >> Dockerfile
    - echo 'RUN du -s `find . -maxdepth 1 | egrep -v "^\.$"`>/before.txt' >> Dockerfile
    - echo 'RUN yarn' >> Dockerfile
    - echo 'RUN du -s `find . -maxdepth 1 | egrep -v "^\.$"`>/after.txt' >> Dockerfile
    - echo "RUN diff /before.txt /after.txt || true" >> Dockerfile
    - echo 'WORKDIR /build' >> Dockerfile
  script:
    - docker build --pull -t ${CONTAINER_BUILD_IMAGE} .
    - docker push ${CONTAINER_BUILD_IMAGE}

# ---------------------------------------------------------------
# Deploy jobs
# ---------------------------------------------------------------

pages:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - ls -la public || true
    - mv dist/web/www public
  artifacts:
    untracked: true
    paths:
      - public
  only:
    - master

mirror:
  stage: deploy
  image: liaohuqiu/rsync
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - >-
      [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >
      ~/.ssh/config
  script:
    - mv dist/web/www public
    - rsync -az -e ssh ./public/ gammanu@1000i100.fr:~/g1.money/dev-cesium
  after_script:
    - ssh gammanu@1000i100.fr "~/g1.money/update-cesium.sh"
  only:
    - master

release:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - ls -la www || true
    - mv dist/web/www www
  artifacts:
    untracked: true
    paths:
      - www
  only:
    - tags

